#labels Developer,Story
#Edit recurring events

= Short Description =
The user should have the option to alter recurring events. Via the Event Details page the user can edit an Event. The date of the recurring event should be updated in the edit form to the date of the day the selected event was on.

= Functional specifications =
The user should be able to alter recurring events. 
If the user edits or deletes a recurring event, four choices should be presented:
  * Alter this instance of the event
  * Alter all instances of this event
  * Alter all following instances of this event

= Tasks =
|| *Task* || *Status* ||
|| Show correct date for recurring event details || done ||
|| Update date when editing recurring event || done ||
|| Edit this instance || done ||
|| Edit all instances || done ||
|| Edit following instances || ||
|| Delete this instance || ||
|| Delete all instances || ||
|| Delete following instances || ||


= Technical implementation =
Always copy the original event, before editing it.

*Alter all instances of the event*
  # Store the event as normal, through the manager

*Alter this instance of the event*
  # Add the start date of the new event to the exclusion rule of the original event
  # Set the Uid of the new event to `null` so the DAO will store it as a new event
  # Set the eventId to null so hibernate won't override the original event in the database and eventually the calendar file
  # Clear the recurrence of the new event
  # Store the original event
  # Store the new event

*Alter all following instances of this event*
  # Copy the recurrence rule from the original event to the new event
  # If the option `repeat count` is used, calculate the number of repeats left for the new event, else just copy the `repeat until` date.
  # Set the `repeat until` date of the original event to the start date of the new event (leaving the exclusion rule intact)
  # Set the `repeat count` of the original event to `null` so it won't conflict with the `repeat until` parameter
  # Set the Uid of the new event to `null` so the DAO will store it as a new event
  # Set the eventId to null so hibernate won't override the original event in the database and eventually the calendar file
  # Store the original event
  # Store the new event


The end date (rDate) of the old event should be set to the start date of the new event. The new event has to made recurring to the and end at the date the user has chosen.